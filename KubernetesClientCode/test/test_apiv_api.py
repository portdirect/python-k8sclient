# coding: utf-8

"""
    

    No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.apiv_api import ApivApi


class TestApivApi(unittest.TestCase):
    """ ApivApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.apiv_api.ApivApi()

    def tearDown(self):
        pass

    def test_connect_delete_namespaced_pod_proxy(self):
        """
        Test case for connect_delete_namespaced_pod_proxy

        connect DELETE requests to proxy of Pod
        """
        pass

    def test_connect_delete_namespaced_pod_proxy_0(self):
        """
        Test case for connect_delete_namespaced_pod_proxy_0

        connect DELETE requests to proxy of Pod
        """
        pass

    def test_connect_delete_namespaced_service_proxy(self):
        """
        Test case for connect_delete_namespaced_service_proxy

        connect DELETE requests to proxy of Service
        """
        pass

    def test_connect_delete_namespaced_service_proxy_0(self):
        """
        Test case for connect_delete_namespaced_service_proxy_0

        connect DELETE requests to proxy of Service
        """
        pass

    def test_connect_delete_node_proxy(self):
        """
        Test case for connect_delete_node_proxy

        connect DELETE requests to proxy of Node
        """
        pass

    def test_connect_delete_node_proxy_0(self):
        """
        Test case for connect_delete_node_proxy_0

        connect DELETE requests to proxy of Node
        """
        pass

    def test_connect_get_namespaced_pod_attach(self):
        """
        Test case for connect_get_namespaced_pod_attach

        connect GET requests to attach of Pod
        """
        pass

    def test_connect_get_namespaced_pod_exec(self):
        """
        Test case for connect_get_namespaced_pod_exec

        connect GET requests to exec of Pod
        """
        pass

    def test_connect_get_namespaced_pod_portforward(self):
        """
        Test case for connect_get_namespaced_pod_portforward

        connect GET requests to portforward of Pod
        """
        pass

    def test_connect_get_namespaced_pod_proxy(self):
        """
        Test case for connect_get_namespaced_pod_proxy

        connect GET requests to proxy of Pod
        """
        pass

    def test_connect_get_namespaced_pod_proxy_0(self):
        """
        Test case for connect_get_namespaced_pod_proxy_0

        connect GET requests to proxy of Pod
        """
        pass

    def test_connect_get_namespaced_service_proxy(self):
        """
        Test case for connect_get_namespaced_service_proxy

        connect GET requests to proxy of Service
        """
        pass

    def test_connect_get_namespaced_service_proxy_0(self):
        """
        Test case for connect_get_namespaced_service_proxy_0

        connect GET requests to proxy of Service
        """
        pass

    def test_connect_get_node_proxy(self):
        """
        Test case for connect_get_node_proxy

        connect GET requests to proxy of Node
        """
        pass

    def test_connect_get_node_proxy_0(self):
        """
        Test case for connect_get_node_proxy_0

        connect GET requests to proxy of Node
        """
        pass

    def test_connect_head_namespaced_pod_proxy(self):
        """
        Test case for connect_head_namespaced_pod_proxy

        connect HEAD requests to proxy of Pod
        """
        pass

    def test_connect_head_namespaced_pod_proxy_0(self):
        """
        Test case for connect_head_namespaced_pod_proxy_0

        connect HEAD requests to proxy of Pod
        """
        pass

    def test_connect_head_namespaced_service_proxy(self):
        """
        Test case for connect_head_namespaced_service_proxy

        connect HEAD requests to proxy of Service
        """
        pass

    def test_connect_head_namespaced_service_proxy_0(self):
        """
        Test case for connect_head_namespaced_service_proxy_0

        connect HEAD requests to proxy of Service
        """
        pass

    def test_connect_head_node_proxy(self):
        """
        Test case for connect_head_node_proxy

        connect HEAD requests to proxy of Node
        """
        pass

    def test_connect_head_node_proxy_0(self):
        """
        Test case for connect_head_node_proxy_0

        connect HEAD requests to proxy of Node
        """
        pass

    def test_connect_options_namespaced_pod_proxy(self):
        """
        Test case for connect_options_namespaced_pod_proxy

        connect OPTIONS requests to proxy of Pod
        """
        pass

    def test_connect_options_namespaced_pod_proxy_0(self):
        """
        Test case for connect_options_namespaced_pod_proxy_0

        connect OPTIONS requests to proxy of Pod
        """
        pass

    def test_connect_options_namespaced_service_proxy(self):
        """
        Test case for connect_options_namespaced_service_proxy

        connect OPTIONS requests to proxy of Service
        """
        pass

    def test_connect_options_namespaced_service_proxy_0(self):
        """
        Test case for connect_options_namespaced_service_proxy_0

        connect OPTIONS requests to proxy of Service
        """
        pass

    def test_connect_options_node_proxy(self):
        """
        Test case for connect_options_node_proxy

        connect OPTIONS requests to proxy of Node
        """
        pass

    def test_connect_options_node_proxy_0(self):
        """
        Test case for connect_options_node_proxy_0

        connect OPTIONS requests to proxy of Node
        """
        pass

    def test_connect_post_namespaced_pod_attach(self):
        """
        Test case for connect_post_namespaced_pod_attach

        connect POST requests to attach of Pod
        """
        pass

    def test_connect_post_namespaced_pod_exec(self):
        """
        Test case for connect_post_namespaced_pod_exec

        connect POST requests to exec of Pod
        """
        pass

    def test_connect_post_namespaced_pod_portforward(self):
        """
        Test case for connect_post_namespaced_pod_portforward

        connect POST requests to portforward of Pod
        """
        pass

    def test_connect_post_namespaced_pod_proxy(self):
        """
        Test case for connect_post_namespaced_pod_proxy

        connect POST requests to proxy of Pod
        """
        pass

    def test_connect_post_namespaced_pod_proxy_0(self):
        """
        Test case for connect_post_namespaced_pod_proxy_0

        connect POST requests to proxy of Pod
        """
        pass

    def test_connect_post_namespaced_service_proxy(self):
        """
        Test case for connect_post_namespaced_service_proxy

        connect POST requests to proxy of Service
        """
        pass

    def test_connect_post_namespaced_service_proxy_0(self):
        """
        Test case for connect_post_namespaced_service_proxy_0

        connect POST requests to proxy of Service
        """
        pass

    def test_connect_post_node_proxy(self):
        """
        Test case for connect_post_node_proxy

        connect POST requests to proxy of Node
        """
        pass

    def test_connect_post_node_proxy_0(self):
        """
        Test case for connect_post_node_proxy_0

        connect POST requests to proxy of Node
        """
        pass

    def test_connect_put_namespaced_pod_proxy(self):
        """
        Test case for connect_put_namespaced_pod_proxy

        connect PUT requests to proxy of Pod
        """
        pass

    def test_connect_put_namespaced_pod_proxy_0(self):
        """
        Test case for connect_put_namespaced_pod_proxy_0

        connect PUT requests to proxy of Pod
        """
        pass

    def test_connect_put_namespaced_service_proxy(self):
        """
        Test case for connect_put_namespaced_service_proxy

        connect PUT requests to proxy of Service
        """
        pass

    def test_connect_put_namespaced_service_proxy_0(self):
        """
        Test case for connect_put_namespaced_service_proxy_0

        connect PUT requests to proxy of Service
        """
        pass

    def test_connect_put_node_proxy(self):
        """
        Test case for connect_put_node_proxy

        connect PUT requests to proxy of Node
        """
        pass

    def test_connect_put_node_proxy_0(self):
        """
        Test case for connect_put_node_proxy_0

        connect PUT requests to proxy of Node
        """
        pass

    def test_create_namespace(self):
        """
        Test case for create_namespace

        create a Namespace
        """
        pass

    def test_create_namespaced_binding(self):
        """
        Test case for create_namespaced_binding

        create a Binding
        """
        pass

    def test_create_namespaced_binding_binding(self):
        """
        Test case for create_namespaced_binding_binding

        create binding of a Binding
        """
        pass

    def test_create_namespaced_config_map(self):
        """
        Test case for create_namespaced_config_map

        create a ConfigMap
        """
        pass

    def test_create_namespaced_endpoints(self):
        """
        Test case for create_namespaced_endpoints

        create a Endpoints
        """
        pass

    def test_create_namespaced_event(self):
        """
        Test case for create_namespaced_event

        create a Event
        """
        pass

    def test_create_namespaced_eviction_eviction(self):
        """
        Test case for create_namespaced_eviction_eviction

        create eviction of a Eviction
        """
        pass

    def test_create_namespaced_limit_range(self):
        """
        Test case for create_namespaced_limit_range

        create a LimitRange
        """
        pass

    def test_create_namespaced_persistent_volume_claim(self):
        """
        Test case for create_namespaced_persistent_volume_claim

        create a PersistentVolumeClaim
        """
        pass

    def test_create_namespaced_pod(self):
        """
        Test case for create_namespaced_pod

        create a Pod
        """
        pass

    def test_create_namespaced_pod_template(self):
        """
        Test case for create_namespaced_pod_template

        create a PodTemplate
        """
        pass

    def test_create_namespaced_replication_controller(self):
        """
        Test case for create_namespaced_replication_controller

        create a ReplicationController
        """
        pass

    def test_create_namespaced_resource_quota(self):
        """
        Test case for create_namespaced_resource_quota

        create a ResourceQuota
        """
        pass

    def test_create_namespaced_secret(self):
        """
        Test case for create_namespaced_secret

        create a Secret
        """
        pass

    def test_create_namespaced_service(self):
        """
        Test case for create_namespaced_service

        create a Service
        """
        pass

    def test_create_namespaced_service_account(self):
        """
        Test case for create_namespaced_service_account

        create a ServiceAccount
        """
        pass

    def test_create_node(self):
        """
        Test case for create_node

        create a Node
        """
        pass

    def test_create_persistent_volume(self):
        """
        Test case for create_persistent_volume

        create a PersistentVolume
        """
        pass

    def test_delete_namespace(self):
        """
        Test case for delete_namespace

        delete a Namespace
        """
        pass

    def test_delete_namespaced_config_map(self):
        """
        Test case for delete_namespaced_config_map

        delete a ConfigMap
        """
        pass

    def test_delete_namespaced_endpoints(self):
        """
        Test case for delete_namespaced_endpoints

        delete a Endpoints
        """
        pass

    def test_delete_namespaced_event(self):
        """
        Test case for delete_namespaced_event

        delete a Event
        """
        pass

    def test_delete_namespaced_limit_range(self):
        """
        Test case for delete_namespaced_limit_range

        delete a LimitRange
        """
        pass

    def test_delete_namespaced_persistent_volume_claim(self):
        """
        Test case for delete_namespaced_persistent_volume_claim

        delete a PersistentVolumeClaim
        """
        pass

    def test_delete_namespaced_pod(self):
        """
        Test case for delete_namespaced_pod

        delete a Pod
        """
        pass

    def test_delete_namespaced_pod_template(self):
        """
        Test case for delete_namespaced_pod_template

        delete a PodTemplate
        """
        pass

    def test_delete_namespaced_replication_controller(self):
        """
        Test case for delete_namespaced_replication_controller

        delete a ReplicationController
        """
        pass

    def test_delete_namespaced_resource_quota(self):
        """
        Test case for delete_namespaced_resource_quota

        delete a ResourceQuota
        """
        pass

    def test_delete_namespaced_secret(self):
        """
        Test case for delete_namespaced_secret

        delete a Secret
        """
        pass

    def test_delete_namespaced_service(self):
        """
        Test case for delete_namespaced_service

        delete a Service
        """
        pass

    def test_delete_namespaced_service_account(self):
        """
        Test case for delete_namespaced_service_account

        delete a ServiceAccount
        """
        pass

    def test_delete_node(self):
        """
        Test case for delete_node

        delete a Node
        """
        pass

    def test_delete_persistent_volume(self):
        """
        Test case for delete_persistent_volume

        delete a PersistentVolume
        """
        pass

    def test_deletecollection_namespace(self):
        """
        Test case for deletecollection_namespace

        delete collection of Namespace
        """
        pass

    def test_deletecollection_namespaced_config_map(self):
        """
        Test case for deletecollection_namespaced_config_map

        delete collection of ConfigMap
        """
        pass

    def test_deletecollection_namespaced_endpoints(self):
        """
        Test case for deletecollection_namespaced_endpoints

        delete collection of Endpoints
        """
        pass

    def test_deletecollection_namespaced_event(self):
        """
        Test case for deletecollection_namespaced_event

        delete collection of Event
        """
        pass

    def test_deletecollection_namespaced_limit_range(self):
        """
        Test case for deletecollection_namespaced_limit_range

        delete collection of LimitRange
        """
        pass

    def test_deletecollection_namespaced_persistent_volume_claim(self):
        """
        Test case for deletecollection_namespaced_persistent_volume_claim

        delete collection of PersistentVolumeClaim
        """
        pass

    def test_deletecollection_namespaced_pod(self):
        """
        Test case for deletecollection_namespaced_pod

        delete collection of Pod
        """
        pass

    def test_deletecollection_namespaced_pod_template(self):
        """
        Test case for deletecollection_namespaced_pod_template

        delete collection of PodTemplate
        """
        pass

    def test_deletecollection_namespaced_replication_controller(self):
        """
        Test case for deletecollection_namespaced_replication_controller

        delete collection of ReplicationController
        """
        pass

    def test_deletecollection_namespaced_resource_quota(self):
        """
        Test case for deletecollection_namespaced_resource_quota

        delete collection of ResourceQuota
        """
        pass

    def test_deletecollection_namespaced_secret(self):
        """
        Test case for deletecollection_namespaced_secret

        delete collection of Secret
        """
        pass

    def test_deletecollection_namespaced_service_account(self):
        """
        Test case for deletecollection_namespaced_service_account

        delete collection of ServiceAccount
        """
        pass

    def test_deletecollection_node(self):
        """
        Test case for deletecollection_node

        delete collection of Node
        """
        pass

    def test_deletecollection_persistent_volume(self):
        """
        Test case for deletecollection_persistent_volume

        delete collection of PersistentVolume
        """
        pass

    def test_get_api_resources(self):
        """
        Test case for get_api_resources

        get available resources
        """
        pass

    def test_list_component_status(self):
        """
        Test case for list_component_status

        list objects of kind ComponentStatus
        """
        pass

    def test_list_namespace(self):
        """
        Test case for list_namespace

        list or watch objects of kind Namespace
        """
        pass

    def test_list_namespaced_config_map(self):
        """
        Test case for list_namespaced_config_map

        list or watch objects of kind ConfigMap
        """
        pass

    def test_list_namespaced_config_map_0(self):
        """
        Test case for list_namespaced_config_map_0

        list or watch objects of kind ConfigMap
        """
        pass

    def test_list_namespaced_endpoints(self):
        """
        Test case for list_namespaced_endpoints

        list or watch objects of kind Endpoints
        """
        pass

    def test_list_namespaced_endpoints_0(self):
        """
        Test case for list_namespaced_endpoints_0

        list or watch objects of kind Endpoints
        """
        pass

    def test_list_namespaced_event(self):
        """
        Test case for list_namespaced_event

        list or watch objects of kind Event
        """
        pass

    def test_list_namespaced_event_0(self):
        """
        Test case for list_namespaced_event_0

        list or watch objects of kind Event
        """
        pass

    def test_list_namespaced_limit_range(self):
        """
        Test case for list_namespaced_limit_range

        list or watch objects of kind LimitRange
        """
        pass

    def test_list_namespaced_limit_range_0(self):
        """
        Test case for list_namespaced_limit_range_0

        list or watch objects of kind LimitRange
        """
        pass

    def test_list_namespaced_persistent_volume_claim(self):
        """
        Test case for list_namespaced_persistent_volume_claim

        list or watch objects of kind PersistentVolumeClaim
        """
        pass

    def test_list_namespaced_persistent_volume_claim_0(self):
        """
        Test case for list_namespaced_persistent_volume_claim_0

        list or watch objects of kind PersistentVolumeClaim
        """
        pass

    def test_list_namespaced_pod(self):
        """
        Test case for list_namespaced_pod

        list or watch objects of kind Pod
        """
        pass

    def test_list_namespaced_pod_0(self):
        """
        Test case for list_namespaced_pod_0

        list or watch objects of kind Pod
        """
        pass

    def test_list_namespaced_pod_template(self):
        """
        Test case for list_namespaced_pod_template

        list or watch objects of kind PodTemplate
        """
        pass

    def test_list_namespaced_pod_template_0(self):
        """
        Test case for list_namespaced_pod_template_0

        list or watch objects of kind PodTemplate
        """
        pass

    def test_list_namespaced_replication_controller(self):
        """
        Test case for list_namespaced_replication_controller

        list or watch objects of kind ReplicationController
        """
        pass

    def test_list_namespaced_replication_controller_0(self):
        """
        Test case for list_namespaced_replication_controller_0

        list or watch objects of kind ReplicationController
        """
        pass

    def test_list_namespaced_resource_quota(self):
        """
        Test case for list_namespaced_resource_quota

        list or watch objects of kind ResourceQuota
        """
        pass

    def test_list_namespaced_resource_quota_0(self):
        """
        Test case for list_namespaced_resource_quota_0

        list or watch objects of kind ResourceQuota
        """
        pass

    def test_list_namespaced_secret(self):
        """
        Test case for list_namespaced_secret

        list or watch objects of kind Secret
        """
        pass

    def test_list_namespaced_secret_0(self):
        """
        Test case for list_namespaced_secret_0

        list or watch objects of kind Secret
        """
        pass

    def test_list_namespaced_service(self):
        """
        Test case for list_namespaced_service

        list or watch objects of kind Service
        """
        pass

    def test_list_namespaced_service_0(self):
        """
        Test case for list_namespaced_service_0

        list or watch objects of kind Service
        """
        pass

    def test_list_namespaced_service_account(self):
        """
        Test case for list_namespaced_service_account

        list or watch objects of kind ServiceAccount
        """
        pass

    def test_list_namespaced_service_account_0(self):
        """
        Test case for list_namespaced_service_account_0

        list or watch objects of kind ServiceAccount
        """
        pass

    def test_list_node(self):
        """
        Test case for list_node

        list or watch objects of kind Node
        """
        pass

    def test_list_persistent_volume(self):
        """
        Test case for list_persistent_volume

        list or watch objects of kind PersistentVolume
        """
        pass

    def test_patch_namespace(self):
        """
        Test case for patch_namespace

        partially update the specified Namespace
        """
        pass

    def test_patch_namespace_status(self):
        """
        Test case for patch_namespace_status

        partially update status of the specified Namespace
        """
        pass

    def test_patch_namespaced_config_map(self):
        """
        Test case for patch_namespaced_config_map

        partially update the specified ConfigMap
        """
        pass

    def test_patch_namespaced_endpoints(self):
        """
        Test case for patch_namespaced_endpoints

        partially update the specified Endpoints
        """
        pass

    def test_patch_namespaced_event(self):
        """
        Test case for patch_namespaced_event

        partially update the specified Event
        """
        pass

    def test_patch_namespaced_limit_range(self):
        """
        Test case for patch_namespaced_limit_range

        partially update the specified LimitRange
        """
        pass

    def test_patch_namespaced_persistent_volume_claim(self):
        """
        Test case for patch_namespaced_persistent_volume_claim

        partially update the specified PersistentVolumeClaim
        """
        pass

    def test_patch_namespaced_persistent_volume_claim_status(self):
        """
        Test case for patch_namespaced_persistent_volume_claim_status

        partially update status of the specified PersistentVolumeClaim
        """
        pass

    def test_patch_namespaced_pod(self):
        """
        Test case for patch_namespaced_pod

        partially update the specified Pod
        """
        pass

    def test_patch_namespaced_pod_status(self):
        """
        Test case for patch_namespaced_pod_status

        partially update status of the specified Pod
        """
        pass

    def test_patch_namespaced_pod_template(self):
        """
        Test case for patch_namespaced_pod_template

        partially update the specified PodTemplate
        """
        pass

    def test_patch_namespaced_replication_controller(self):
        """
        Test case for patch_namespaced_replication_controller

        partially update the specified ReplicationController
        """
        pass

    def test_patch_namespaced_replication_controller_status(self):
        """
        Test case for patch_namespaced_replication_controller_status

        partially update status of the specified ReplicationController
        """
        pass

    def test_patch_namespaced_resource_quota(self):
        """
        Test case for patch_namespaced_resource_quota

        partially update the specified ResourceQuota
        """
        pass

    def test_patch_namespaced_resource_quota_status(self):
        """
        Test case for patch_namespaced_resource_quota_status

        partially update status of the specified ResourceQuota
        """
        pass

    def test_patch_namespaced_scale_scale(self):
        """
        Test case for patch_namespaced_scale_scale

        partially update scale of the specified Scale
        """
        pass

    def test_patch_namespaced_secret(self):
        """
        Test case for patch_namespaced_secret

        partially update the specified Secret
        """
        pass

    def test_patch_namespaced_service(self):
        """
        Test case for patch_namespaced_service

        partially update the specified Service
        """
        pass

    def test_patch_namespaced_service_account(self):
        """
        Test case for patch_namespaced_service_account

        partially update the specified ServiceAccount
        """
        pass

    def test_patch_namespaced_service_status(self):
        """
        Test case for patch_namespaced_service_status

        partially update status of the specified Service
        """
        pass

    def test_patch_node(self):
        """
        Test case for patch_node

        partially update the specified Node
        """
        pass

    def test_patch_node_status(self):
        """
        Test case for patch_node_status

        partially update status of the specified Node
        """
        pass

    def test_patch_persistent_volume(self):
        """
        Test case for patch_persistent_volume

        partially update the specified PersistentVolume
        """
        pass

    def test_patch_persistent_volume_status(self):
        """
        Test case for patch_persistent_volume_status

        partially update status of the specified PersistentVolume
        """
        pass

    def test_proxy_delete_namespaced_pod(self):
        """
        Test case for proxy_delete_namespaced_pod

        proxy DELETE requests to Pod
        """
        pass

    def test_proxy_delete_namespaced_pod_0(self):
        """
        Test case for proxy_delete_namespaced_pod_0

        proxy DELETE requests to Pod
        """
        pass

    def test_proxy_delete_namespaced_service(self):
        """
        Test case for proxy_delete_namespaced_service

        proxy DELETE requests to Service
        """
        pass

    def test_proxy_delete_namespaced_service_0(self):
        """
        Test case for proxy_delete_namespaced_service_0

        proxy DELETE requests to Service
        """
        pass

    def test_proxy_delete_node(self):
        """
        Test case for proxy_delete_node

        proxy DELETE requests to Node
        """
        pass

    def test_proxy_delete_node_0(self):
        """
        Test case for proxy_delete_node_0

        proxy DELETE requests to Node
        """
        pass

    def test_proxy_get_namespaced_pod(self):
        """
        Test case for proxy_get_namespaced_pod

        proxy GET requests to Pod
        """
        pass

    def test_proxy_get_namespaced_pod_0(self):
        """
        Test case for proxy_get_namespaced_pod_0

        proxy GET requests to Pod
        """
        pass

    def test_proxy_get_namespaced_service(self):
        """
        Test case for proxy_get_namespaced_service

        proxy GET requests to Service
        """
        pass

    def test_proxy_get_namespaced_service_0(self):
        """
        Test case for proxy_get_namespaced_service_0

        proxy GET requests to Service
        """
        pass

    def test_proxy_get_node(self):
        """
        Test case for proxy_get_node

        proxy GET requests to Node
        """
        pass

    def test_proxy_get_node_0(self):
        """
        Test case for proxy_get_node_0

        proxy GET requests to Node
        """
        pass

    def test_proxy_head_namespaced_pod(self):
        """
        Test case for proxy_head_namespaced_pod

        proxy HEAD requests to Pod
        """
        pass

    def test_proxy_head_namespaced_pod_0(self):
        """
        Test case for proxy_head_namespaced_pod_0

        proxy HEAD requests to Pod
        """
        pass

    def test_proxy_head_namespaced_service(self):
        """
        Test case for proxy_head_namespaced_service

        proxy HEAD requests to Service
        """
        pass

    def test_proxy_head_namespaced_service_0(self):
        """
        Test case for proxy_head_namespaced_service_0

        proxy HEAD requests to Service
        """
        pass

    def test_proxy_head_node(self):
        """
        Test case for proxy_head_node

        proxy HEAD requests to Node
        """
        pass

    def test_proxy_head_node_0(self):
        """
        Test case for proxy_head_node_0

        proxy HEAD requests to Node
        """
        pass

    def test_proxy_options_namespaced_pod(self):
        """
        Test case for proxy_options_namespaced_pod

        proxy OPTIONS requests to Pod
        """
        pass

    def test_proxy_options_namespaced_pod_0(self):
        """
        Test case for proxy_options_namespaced_pod_0

        proxy OPTIONS requests to Pod
        """
        pass

    def test_proxy_options_namespaced_service(self):
        """
        Test case for proxy_options_namespaced_service

        proxy OPTIONS requests to Service
        """
        pass

    def test_proxy_options_namespaced_service_0(self):
        """
        Test case for proxy_options_namespaced_service_0

        proxy OPTIONS requests to Service
        """
        pass

    def test_proxy_options_node(self):
        """
        Test case for proxy_options_node

        proxy OPTIONS requests to Node
        """
        pass

    def test_proxy_options_node_0(self):
        """
        Test case for proxy_options_node_0

        proxy OPTIONS requests to Node
        """
        pass

    def test_proxy_post_namespaced_pod(self):
        """
        Test case for proxy_post_namespaced_pod

        proxy POST requests to Pod
        """
        pass

    def test_proxy_post_namespaced_pod_0(self):
        """
        Test case for proxy_post_namespaced_pod_0

        proxy POST requests to Pod
        """
        pass

    def test_proxy_post_namespaced_service(self):
        """
        Test case for proxy_post_namespaced_service

        proxy POST requests to Service
        """
        pass

    def test_proxy_post_namespaced_service_0(self):
        """
        Test case for proxy_post_namespaced_service_0

        proxy POST requests to Service
        """
        pass

    def test_proxy_post_node(self):
        """
        Test case for proxy_post_node

        proxy POST requests to Node
        """
        pass

    def test_proxy_post_node_0(self):
        """
        Test case for proxy_post_node_0

        proxy POST requests to Node
        """
        pass

    def test_proxy_put_namespaced_pod(self):
        """
        Test case for proxy_put_namespaced_pod

        proxy PUT requests to Pod
        """
        pass

    def test_proxy_put_namespaced_pod_0(self):
        """
        Test case for proxy_put_namespaced_pod_0

        proxy PUT requests to Pod
        """
        pass

    def test_proxy_put_namespaced_service(self):
        """
        Test case for proxy_put_namespaced_service

        proxy PUT requests to Service
        """
        pass

    def test_proxy_put_namespaced_service_0(self):
        """
        Test case for proxy_put_namespaced_service_0

        proxy PUT requests to Service
        """
        pass

    def test_proxy_put_node(self):
        """
        Test case for proxy_put_node

        proxy PUT requests to Node
        """
        pass

    def test_proxy_put_node_0(self):
        """
        Test case for proxy_put_node_0

        proxy PUT requests to Node
        """
        pass

    def test_read_component_status(self):
        """
        Test case for read_component_status

        read the specified ComponentStatus
        """
        pass

    def test_read_namespace(self):
        """
        Test case for read_namespace

        read the specified Namespace
        """
        pass

    def test_read_namespace_status(self):
        """
        Test case for read_namespace_status

        read status of the specified Namespace
        """
        pass

    def test_read_namespaced_config_map(self):
        """
        Test case for read_namespaced_config_map

        read the specified ConfigMap
        """
        pass

    def test_read_namespaced_endpoints(self):
        """
        Test case for read_namespaced_endpoints

        read the specified Endpoints
        """
        pass

    def test_read_namespaced_event(self):
        """
        Test case for read_namespaced_event

        read the specified Event
        """
        pass

    def test_read_namespaced_limit_range(self):
        """
        Test case for read_namespaced_limit_range

        read the specified LimitRange
        """
        pass

    def test_read_namespaced_persistent_volume_claim(self):
        """
        Test case for read_namespaced_persistent_volume_claim

        read the specified PersistentVolumeClaim
        """
        pass

    def test_read_namespaced_persistent_volume_claim_status(self):
        """
        Test case for read_namespaced_persistent_volume_claim_status

        read status of the specified PersistentVolumeClaim
        """
        pass

    def test_read_namespaced_pod(self):
        """
        Test case for read_namespaced_pod

        read the specified Pod
        """
        pass

    def test_read_namespaced_pod_log(self):
        """
        Test case for read_namespaced_pod_log

        read log of the specified Pod
        """
        pass

    def test_read_namespaced_pod_status(self):
        """
        Test case for read_namespaced_pod_status

        read status of the specified Pod
        """
        pass

    def test_read_namespaced_pod_template(self):
        """
        Test case for read_namespaced_pod_template

        read the specified PodTemplate
        """
        pass

    def test_read_namespaced_replication_controller(self):
        """
        Test case for read_namespaced_replication_controller

        read the specified ReplicationController
        """
        pass

    def test_read_namespaced_replication_controller_status(self):
        """
        Test case for read_namespaced_replication_controller_status

        read status of the specified ReplicationController
        """
        pass

    def test_read_namespaced_resource_quota(self):
        """
        Test case for read_namespaced_resource_quota

        read the specified ResourceQuota
        """
        pass

    def test_read_namespaced_resource_quota_status(self):
        """
        Test case for read_namespaced_resource_quota_status

        read status of the specified ResourceQuota
        """
        pass

    def test_read_namespaced_scale_scale(self):
        """
        Test case for read_namespaced_scale_scale

        read scale of the specified Scale
        """
        pass

    def test_read_namespaced_secret(self):
        """
        Test case for read_namespaced_secret

        read the specified Secret
        """
        pass

    def test_read_namespaced_service(self):
        """
        Test case for read_namespaced_service

        read the specified Service
        """
        pass

    def test_read_namespaced_service_account(self):
        """
        Test case for read_namespaced_service_account

        read the specified ServiceAccount
        """
        pass

    def test_read_namespaced_service_status(self):
        """
        Test case for read_namespaced_service_status

        read status of the specified Service
        """
        pass

    def test_read_node(self):
        """
        Test case for read_node

        read the specified Node
        """
        pass

    def test_read_node_status(self):
        """
        Test case for read_node_status

        read status of the specified Node
        """
        pass

    def test_read_persistent_volume(self):
        """
        Test case for read_persistent_volume

        read the specified PersistentVolume
        """
        pass

    def test_read_persistent_volume_status(self):
        """
        Test case for read_persistent_volume_status

        read status of the specified PersistentVolume
        """
        pass

    def test_replace_namespace(self):
        """
        Test case for replace_namespace

        replace the specified Namespace
        """
        pass

    def test_replace_namespace_finalize(self):
        """
        Test case for replace_namespace_finalize

        replace finalize of the specified Namespace
        """
        pass

    def test_replace_namespace_status(self):
        """
        Test case for replace_namespace_status

        replace status of the specified Namespace
        """
        pass

    def test_replace_namespaced_config_map(self):
        """
        Test case for replace_namespaced_config_map

        replace the specified ConfigMap
        """
        pass

    def test_replace_namespaced_endpoints(self):
        """
        Test case for replace_namespaced_endpoints

        replace the specified Endpoints
        """
        pass

    def test_replace_namespaced_event(self):
        """
        Test case for replace_namespaced_event

        replace the specified Event
        """
        pass

    def test_replace_namespaced_limit_range(self):
        """
        Test case for replace_namespaced_limit_range

        replace the specified LimitRange
        """
        pass

    def test_replace_namespaced_persistent_volume_claim(self):
        """
        Test case for replace_namespaced_persistent_volume_claim

        replace the specified PersistentVolumeClaim
        """
        pass

    def test_replace_namespaced_persistent_volume_claim_status(self):
        """
        Test case for replace_namespaced_persistent_volume_claim_status

        replace status of the specified PersistentVolumeClaim
        """
        pass

    def test_replace_namespaced_pod(self):
        """
        Test case for replace_namespaced_pod

        replace the specified Pod
        """
        pass

    def test_replace_namespaced_pod_status(self):
        """
        Test case for replace_namespaced_pod_status

        replace status of the specified Pod
        """
        pass

    def test_replace_namespaced_pod_template(self):
        """
        Test case for replace_namespaced_pod_template

        replace the specified PodTemplate
        """
        pass

    def test_replace_namespaced_replication_controller(self):
        """
        Test case for replace_namespaced_replication_controller

        replace the specified ReplicationController
        """
        pass

    def test_replace_namespaced_replication_controller_status(self):
        """
        Test case for replace_namespaced_replication_controller_status

        replace status of the specified ReplicationController
        """
        pass

    def test_replace_namespaced_resource_quota(self):
        """
        Test case for replace_namespaced_resource_quota

        replace the specified ResourceQuota
        """
        pass

    def test_replace_namespaced_resource_quota_status(self):
        """
        Test case for replace_namespaced_resource_quota_status

        replace status of the specified ResourceQuota
        """
        pass

    def test_replace_namespaced_scale_scale(self):
        """
        Test case for replace_namespaced_scale_scale

        replace scale of the specified Scale
        """
        pass

    def test_replace_namespaced_secret(self):
        """
        Test case for replace_namespaced_secret

        replace the specified Secret
        """
        pass

    def test_replace_namespaced_service(self):
        """
        Test case for replace_namespaced_service

        replace the specified Service
        """
        pass

    def test_replace_namespaced_service_account(self):
        """
        Test case for replace_namespaced_service_account

        replace the specified ServiceAccount
        """
        pass

    def test_replace_namespaced_service_status(self):
        """
        Test case for replace_namespaced_service_status

        replace status of the specified Service
        """
        pass

    def test_replace_node(self):
        """
        Test case for replace_node

        replace the specified Node
        """
        pass

    def test_replace_node_status(self):
        """
        Test case for replace_node_status

        replace status of the specified Node
        """
        pass

    def test_replace_persistent_volume(self):
        """
        Test case for replace_persistent_volume

        replace the specified PersistentVolume
        """
        pass

    def test_replace_persistent_volume_status(self):
        """
        Test case for replace_persistent_volume_status

        replace status of the specified PersistentVolume
        """
        pass

    def test_watch_namespace(self):
        """
        Test case for watch_namespace

        watch changes to an object of kind Namespace
        """
        pass

    def test_watch_namespace_list(self):
        """
        Test case for watch_namespace_list

        watch individual changes to a list of Namespace
        """
        pass

    def test_watch_namespaced_config_map(self):
        """
        Test case for watch_namespaced_config_map

        watch changes to an object of kind ConfigMap
        """
        pass

    def test_watch_namespaced_config_map_list(self):
        """
        Test case for watch_namespaced_config_map_list

        watch individual changes to a list of ConfigMap
        """
        pass

    def test_watch_namespaced_config_map_list_0(self):
        """
        Test case for watch_namespaced_config_map_list_0

        watch individual changes to a list of ConfigMap
        """
        pass

    def test_watch_namespaced_endpoints(self):
        """
        Test case for watch_namespaced_endpoints

        watch changes to an object of kind Endpoints
        """
        pass

    def test_watch_namespaced_endpoints_list(self):
        """
        Test case for watch_namespaced_endpoints_list

        watch individual changes to a list of Endpoints
        """
        pass

    def test_watch_namespaced_endpoints_list_0(self):
        """
        Test case for watch_namespaced_endpoints_list_0

        watch individual changes to a list of Endpoints
        """
        pass

    def test_watch_namespaced_event(self):
        """
        Test case for watch_namespaced_event

        watch changes to an object of kind Event
        """
        pass

    def test_watch_namespaced_event_list(self):
        """
        Test case for watch_namespaced_event_list

        watch individual changes to a list of Event
        """
        pass

    def test_watch_namespaced_event_list_0(self):
        """
        Test case for watch_namespaced_event_list_0

        watch individual changes to a list of Event
        """
        pass

    def test_watch_namespaced_limit_range(self):
        """
        Test case for watch_namespaced_limit_range

        watch changes to an object of kind LimitRange
        """
        pass

    def test_watch_namespaced_limit_range_list(self):
        """
        Test case for watch_namespaced_limit_range_list

        watch individual changes to a list of LimitRange
        """
        pass

    def test_watch_namespaced_limit_range_list_0(self):
        """
        Test case for watch_namespaced_limit_range_list_0

        watch individual changes to a list of LimitRange
        """
        pass

    def test_watch_namespaced_persistent_volume_claim(self):
        """
        Test case for watch_namespaced_persistent_volume_claim

        watch changes to an object of kind PersistentVolumeClaim
        """
        pass

    def test_watch_namespaced_persistent_volume_claim_list(self):
        """
        Test case for watch_namespaced_persistent_volume_claim_list

        watch individual changes to a list of PersistentVolumeClaim
        """
        pass

    def test_watch_namespaced_persistent_volume_claim_list_0(self):
        """
        Test case for watch_namespaced_persistent_volume_claim_list_0

        watch individual changes to a list of PersistentVolumeClaim
        """
        pass

    def test_watch_namespaced_pod(self):
        """
        Test case for watch_namespaced_pod

        watch changes to an object of kind Pod
        """
        pass

    def test_watch_namespaced_pod_list(self):
        """
        Test case for watch_namespaced_pod_list

        watch individual changes to a list of Pod
        """
        pass

    def test_watch_namespaced_pod_list_0(self):
        """
        Test case for watch_namespaced_pod_list_0

        watch individual changes to a list of Pod
        """
        pass

    def test_watch_namespaced_pod_template(self):
        """
        Test case for watch_namespaced_pod_template

        watch changes to an object of kind PodTemplate
        """
        pass

    def test_watch_namespaced_pod_template_list(self):
        """
        Test case for watch_namespaced_pod_template_list

        watch individual changes to a list of PodTemplate
        """
        pass

    def test_watch_namespaced_pod_template_list_0(self):
        """
        Test case for watch_namespaced_pod_template_list_0

        watch individual changes to a list of PodTemplate
        """
        pass

    def test_watch_namespaced_replication_controller(self):
        """
        Test case for watch_namespaced_replication_controller

        watch changes to an object of kind ReplicationController
        """
        pass

    def test_watch_namespaced_replication_controller_list(self):
        """
        Test case for watch_namespaced_replication_controller_list

        watch individual changes to a list of ReplicationController
        """
        pass

    def test_watch_namespaced_replication_controller_list_0(self):
        """
        Test case for watch_namespaced_replication_controller_list_0

        watch individual changes to a list of ReplicationController
        """
        pass

    def test_watch_namespaced_resource_quota(self):
        """
        Test case for watch_namespaced_resource_quota

        watch changes to an object of kind ResourceQuota
        """
        pass

    def test_watch_namespaced_resource_quota_list(self):
        """
        Test case for watch_namespaced_resource_quota_list

        watch individual changes to a list of ResourceQuota
        """
        pass

    def test_watch_namespaced_resource_quota_list_0(self):
        """
        Test case for watch_namespaced_resource_quota_list_0

        watch individual changes to a list of ResourceQuota
        """
        pass

    def test_watch_namespaced_secret(self):
        """
        Test case for watch_namespaced_secret

        watch changes to an object of kind Secret
        """
        pass

    def test_watch_namespaced_secret_list(self):
        """
        Test case for watch_namespaced_secret_list

        watch individual changes to a list of Secret
        """
        pass

    def test_watch_namespaced_secret_list_0(self):
        """
        Test case for watch_namespaced_secret_list_0

        watch individual changes to a list of Secret
        """
        pass

    def test_watch_namespaced_service(self):
        """
        Test case for watch_namespaced_service

        watch changes to an object of kind Service
        """
        pass

    def test_watch_namespaced_service_account(self):
        """
        Test case for watch_namespaced_service_account

        watch changes to an object of kind ServiceAccount
        """
        pass

    def test_watch_namespaced_service_account_list(self):
        """
        Test case for watch_namespaced_service_account_list

        watch individual changes to a list of ServiceAccount
        """
        pass

    def test_watch_namespaced_service_account_list_0(self):
        """
        Test case for watch_namespaced_service_account_list_0

        watch individual changes to a list of ServiceAccount
        """
        pass

    def test_watch_namespaced_service_list(self):
        """
        Test case for watch_namespaced_service_list

        watch individual changes to a list of Service
        """
        pass

    def test_watch_namespaced_service_list_0(self):
        """
        Test case for watch_namespaced_service_list_0

        watch individual changes to a list of Service
        """
        pass

    def test_watch_node(self):
        """
        Test case for watch_node

        watch changes to an object of kind Node
        """
        pass

    def test_watch_node_list(self):
        """
        Test case for watch_node_list

        watch individual changes to a list of Node
        """
        pass

    def test_watch_persistent_volume(self):
        """
        Test case for watch_persistent_volume

        watch changes to an object of kind PersistentVolume
        """
        pass

    def test_watch_persistent_volume_list(self):
        """
        Test case for watch_persistent_volume_list

        watch individual changes to a list of PersistentVolume
        """
        pass


if __name__ == '__main__':
    unittest.main()
